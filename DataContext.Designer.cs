//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer for SQL Server tool using LINQ to SQL template.
// Code is generated on: 28.04.2018 09:38:55
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Magaza
{

    [System.Data.Linq.Mapping.DatabaseAttribute(Name = "data")]
    public partial class DataContext : System.Data.Linq.DataContext
    {
        private static System.Data.Linq.Mapping.MappingSource mappingSource = new System.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();

        partial void InsertMusteriIadeler(MusteriIadeler instance);
        partial void UpdateMusteriIadeler(MusteriIadeler instance);
        partial void DeleteMusteriIadeler(MusteriIadeler instance);
        partial void InsertMusteriler(Musteriler instance);
        partial void UpdateMusteriler(Musteriler instance);
        partial void DeleteMusteriler(Musteriler instance);
        partial void InsertSatislar(Satislar instance);
        partial void UpdateSatislar(Satislar instance);
        partial void DeleteSatislar(Satislar instance);
        partial void InsertTahsilatlar(Tahsilatlar instance);
        partial void UpdateTahsilatlar(Tahsilatlar instance);
        partial void DeleteTahsilatlar(Tahsilatlar instance);
        partial void InsertTaksitler(Taksitler instance);
        partial void UpdateTaksitler(Taksitler instance);
        partial void DeleteTaksitler(Taksitler instance);
        partial void InsertToptancilar(Toptancilar instance);
        partial void UpdateToptancilar(Toptancilar instance);
        partial void DeleteToptancilar(Toptancilar instance);
        partial void InsertUrunGruplari(UrunGruplari instance);
        partial void UpdateUrunGruplari(UrunGruplari instance);
        partial void DeleteUrunGruplari(UrunGruplari instance);
        partial void InsertUrunKategorileri(UrunKategorileri instance);
        partial void UpdateUrunKategorileri(UrunKategorileri instance);
        partial void DeleteUrunKategorileri(UrunKategorileri instance);
        partial void InsertUrunler(Urunler instance);
        partial void UpdateUrunler(Urunler instance);
        partial void DeleteUrunler(Urunler instance);
        partial void InsertAyarlar(Ayarlar instance);
        partial void UpdateAyarlar(Ayarlar instance);
        partial void DeleteAyarlar(Ayarlar instance);

        #endregion

        public DataContext() :
        base(GetConnectionString("DataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public DataContext(System.Data.Linq.Mapping.MappingSource mappingSource) :
        base(GetConnectionString("DataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName) 
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public DataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public DataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public System.Data.Linq.Table<MusteriIadeler> MusteriIadeler
        {
            get
            {
                return this.GetTable<MusteriIadeler>();
            }
        }

        public System.Data.Linq.Table<Musteriler> Musteriler
        {
            get
            {
                return this.GetTable<Musteriler>();
            }
        }

        public System.Data.Linq.Table<Satislar> Satislar
        {
            get
            {
                return this.GetTable<Satislar>();
            }
        }

        public System.Data.Linq.Table<Tahsilatlar> Tahsilatlar
        {
            get
            {
                return this.GetTable<Tahsilatlar>();
            }
        }

        public System.Data.Linq.Table<Taksitler> Taksitler
        {
            get
            {
                return this.GetTable<Taksitler>();
            }
        }

        public System.Data.Linq.Table<Toptancilar> Toptancilar
        {
            get
            {
                return this.GetTable<Toptancilar>();
            }
        }

        public System.Data.Linq.Table<UrunGruplari> UrunGruplari
        {
            get
            {
                return this.GetTable<UrunGruplari>();
            }
        }

        public System.Data.Linq.Table<UrunKategorileri> UrunKategorileri
        {
            get
            {
                return this.GetTable<UrunKategorileri>();
            }
        }

        public System.Data.Linq.Table<Urunler> Urunler
        {
            get
            {
                return this.GetTable<Urunler>();
            }
        }

        public System.Data.Linq.Table<Ayarlar> Ayarlar
        {
            get
            {
                return this.GetTable<Ayarlar>();
            }
        }
    }
}

namespace Magaza
{

    /// <summary>
    /// There are no comments for Magaza.MusteriIadeler in the schema.
    /// </summary>
    [Table(Name = @"MusteriIadeler")]
    public partial class MusteriIadeler : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _MusteriIadeID;

        private System.Nullable<System.DateTime> _IadeTarihi;

        private int _MusteriID;

        private int _UrunID;

        private int _IadeAdeti;

        private float _OdenenTutar;

        private string _Aciklama;

        private int _SatisID;
        #pragma warning restore 0649

        private EntityRef<Musteriler> _Musteriler;

        private EntityRef<Urunler> _Urunler;

        private EntityRef<Satislar> _Satislar;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMusteriIadeIDChanging(int value);
        partial void OnMusteriIadeIDChanged();
        partial void OnIadeTarihiChanging(System.Nullable<System.DateTime> value);
        partial void OnIadeTarihiChanged();
        partial void OnMusteriIDChanging(int value);
        partial void OnMusteriIDChanged();
        partial void OnUrunIDChanging(int value);
        partial void OnUrunIDChanged();
        partial void OnIadeAdetiChanging(int value);
        partial void OnIadeAdetiChanged();
        partial void OnOdenenTutarChanging(float value);
        partial void OnOdenenTutarChanged();
        partial void OnAciklamaChanging(string value);
        partial void OnAciklamaChanged();
        partial void OnSatisIDChanging(int value);
        partial void OnSatisIDChanged();
        #endregion

        public MusteriIadeler()
        {
            this._Musteriler  = default(EntityRef<Musteriler>);
            this._Urunler  = default(EntityRef<Urunler>);
            this._Satislar  = default(EntityRef<Satislar>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MusteriIadeID in the schema.
        /// </summary>
        [Column(Storage = "_MusteriIadeID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int MusteriIadeID
        {
            get
            {
                return this._MusteriIadeID;
            }
            set
            {
                if (this._MusteriIadeID != value)
                {
                    this.OnMusteriIadeIDChanging(value);
                    this.SendPropertyChanging("MusteriIadeID");
                    this._MusteriIadeID = value;
                    this.SendPropertyChanged("MusteriIadeID");
                    this.OnMusteriIadeIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IadeTarihi in the schema.
        /// </summary>
        [Column(Storage = "_IadeTarihi", DbType = "DATETIME")]
        public System.Nullable<System.DateTime> IadeTarihi
        {
            get
            {
                return this._IadeTarihi;
            }
            set
            {
                if (this._IadeTarihi != value)
                {
                    this.OnIadeTarihiChanging(value);
                    this.SendPropertyChanging("IadeTarihi");
                    this._IadeTarihi = value;
                    this.SendPropertyChanged("IadeTarihi");
                    this.OnIadeTarihiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MusteriID in the schema.
        /// </summary>
        [Column(Storage = "_MusteriID", CanBeNull = false, DbType = "INT NOT NULL")]
        public int MusteriID
        {
            get
            {
                return this._MusteriID;
            }
            set
            {
                if (this._MusteriID != value)
                {
                    if (this._Musteriler.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMusteriIDChanging(value);
                    this.SendPropertyChanging("MusteriID");
                    this._MusteriID = value;
                    this.SendPropertyChanged("MusteriID");
                    this.OnMusteriIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UrunID in the schema.
        /// </summary>
        [Column(Storage = "_UrunID", CanBeNull = false, DbType = "INT NOT NULL")]
        public int UrunID
        {
            get
            {
                return this._UrunID;
            }
            set
            {
                if (this._UrunID != value)
                {
                    if (this._Urunler.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnUrunIDChanging(value);
                    this.SendPropertyChanging("UrunID");
                    this._UrunID = value;
                    this.SendPropertyChanged("UrunID");
                    this.OnUrunIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IadeAdeti in the schema.
        /// </summary>
        [Column(Storage = "_IadeAdeti", CanBeNull = false, DbType = "INT NOT NULL")]
        public int IadeAdeti
        {
            get
            {
                return this._IadeAdeti;
            }
            set
            {
                if (this._IadeAdeti != value)
                {
                    this.OnIadeAdetiChanging(value);
                    this.SendPropertyChanging("IadeAdeti");
                    this._IadeAdeti = value;
                    this.SendPropertyChanged("IadeAdeti");
                    this.OnIadeAdetiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OdenenTutar in the schema.
        /// </summary>
        [Column(Storage = "_OdenenTutar", CanBeNull = false, DbType = "REAL NOT NULL")]
        public float OdenenTutar
        {
            get
            {
                return this._OdenenTutar;
            }
            set
            {
                if (this._OdenenTutar != value)
                {
                    this.OnOdenenTutarChanging(value);
                    this.SendPropertyChanging("OdenenTutar");
                    this._OdenenTutar = value;
                    this.SendPropertyChanged("OdenenTutar");
                    this.OnOdenenTutarChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Aciklama in the schema.
        /// </summary>
        [Column(Storage = "_Aciklama", DbType = "NVARCHAR(4000)")]
        public string Aciklama
        {
            get
            {
                return this._Aciklama;
            }
            set
            {
                if (this._Aciklama != value)
                {
                    this.OnAciklamaChanging(value);
                    this.SendPropertyChanging("Aciklama");
                    this._Aciklama = value;
                    this.SendPropertyChanged("Aciklama");
                    this.OnAciklamaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SatisID in the schema.
        /// </summary>
        [Column(Storage = "_SatisID", CanBeNull = false, DbType = "INT NOT NULL")]
        public int SatisID
        {
            get
            {
                return this._SatisID;
            }
            set
            {
                if (this._SatisID != value)
                {
                    if (this._Satislar.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSatisIDChanging(value);
                    this.SendPropertyChanging("SatisID");
                    this._SatisID = value;
                    this.SendPropertyChanged("SatisID");
                    this.OnSatisIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Musteriler in the schema.
        /// </summary>
        [Association(Name="Musteriler_MusteriIadeler", Storage="_Musteriler", ThisKey="MusteriID", OtherKey="MusteriID", IsForeignKey=true, DeleteOnNull=true)]
        public Musteriler Musteriler
        {
            get
            {
                return this._Musteriler.Entity;
            }
            set
            {
                Musteriler previousValue = this._Musteriler.Entity;
                if ((previousValue != value) || (this._Musteriler.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Musteriler");
                    if (previousValue != null)
                    {
                        this._Musteriler.Entity = null;
                        previousValue.MusteriIadeler.Remove(this);
                    }
                    this._Musteriler.Entity = value;
                    if (value != null)
                    {
                        this._MusteriID = value.MusteriID;
                        value.MusteriIadeler.Add(this);
                    }
                    else
                    {
                        this._MusteriID = default(int);
                    }
                    this.SendPropertyChanged("Musteriler");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Urunler in the schema.
        /// </summary>
        [Association(Name="Urunler_MusteriIadeler", Storage="_Urunler", ThisKey="UrunID", OtherKey="UrunID", IsForeignKey=true, DeleteOnNull=true)]
        public Urunler Urunler
        {
            get
            {
                return this._Urunler.Entity;
            }
            set
            {
                Urunler previousValue = this._Urunler.Entity;
                if ((previousValue != value) || (this._Urunler.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Urunler");
                    if (previousValue != null)
                    {
                        this._Urunler.Entity = null;
                        previousValue.MusteriIadeler.Remove(this);
                    }
                    this._Urunler.Entity = value;
                    if (value != null)
                    {
                        this._UrunID = value.UrunID;
                        value.MusteriIadeler.Add(this);
                    }
                    else
                    {
                        this._UrunID = default(int);
                    }
                    this.SendPropertyChanged("Urunler");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Satislar in the schema.
        /// </summary>
        [Association(Name="Satislar_MusteriIadeler", Storage="_Satislar", ThisKey="SatisID", OtherKey="SatisID", IsForeignKey=true, DeleteOnNull=true)]
        public Satislar Satislar
        {
            get
            {
                return this._Satislar.Entity;
            }
            set
            {
                Satislar previousValue = this._Satislar.Entity;
                if ((previousValue != value) || (this._Satislar.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Satislar");
                    if (previousValue != null)
                    {
                        this._Satislar.Entity = null;
                        previousValue.MusteriIadeler.Remove(this);
                    }
                    this._Satislar.Entity = value;
                    if (value != null)
                    {
                        this._SatisID = value.SatisID;
                        value.MusteriIadeler.Add(this);
                    }
                    else
                    {
                        this._SatisID = default(int);
                    }
                    this.SendPropertyChanged("Satislar");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Magaza.Musteriler in the schema.
    /// </summary>
    [Table(Name = @"Musteriler")]
    public partial class Musteriler : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _MusteriID;

        private string _Adi;

        private string _Soyadi;

        private string _Tc;

        private string _Telefon;

        private string _Adres;

        private System.Nullable<int> _Yas;

        private string _Aciklama;

        private string _Eposta;

        private byte[] _Resim;
        #pragma warning restore 0649

        private EntitySet<MusteriIadeler> _MusteriIadeler;

        private EntitySet<Satislar> _Satislar;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMusteriIDChanging(int value);
        partial void OnMusteriIDChanged();
        partial void OnAdiChanging(string value);
        partial void OnAdiChanged();
        partial void OnSoyadiChanging(string value);
        partial void OnSoyadiChanged();
        partial void OnTcChanging(string value);
        partial void OnTcChanged();
        partial void OnTelefonChanging(string value);
        partial void OnTelefonChanged();
        partial void OnAdresChanging(string value);
        partial void OnAdresChanged();
        partial void OnYasChanging(System.Nullable<int> value);
        partial void OnYasChanged();
        partial void OnAciklamaChanging(string value);
        partial void OnAciklamaChanged();
        partial void OnEpostaChanging(string value);
        partial void OnEpostaChanged();
        partial void OnResimChanging(byte[] value);
        partial void OnResimChanged();
        #endregion

        public Musteriler()
        {
            this._MusteriIadeler = new EntitySet<MusteriIadeler>(new Action<MusteriIadeler>(this.attach_MusteriIadeler), new Action<MusteriIadeler>(this.detach_MusteriIadeler));
            this._Satislar = new EntitySet<Satislar>(new Action<Satislar>(this.attach_Satislar), new Action<Satislar>(this.detach_Satislar));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MusteriID in the schema.
        /// </summary>
        [Column(Storage = "_MusteriID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int MusteriID
        {
            get
            {
                return this._MusteriID;
            }
            set
            {
                if (this._MusteriID != value)
                {
                    this.OnMusteriIDChanging(value);
                    this.SendPropertyChanging("MusteriID");
                    this._MusteriID = value;
                    this.SendPropertyChanged("MusteriID");
                    this.OnMusteriIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Adi in the schema.
        /// </summary>
        [Column(Storage = "_Adi", CanBeNull = false, DbType = "NVARCHAR(4000) NOT NULL")]
        public string Adi
        {
            get
            {
                return this._Adi;
            }
            set
            {
                if (this._Adi != value)
                {
                    this.OnAdiChanging(value);
                    this.SendPropertyChanging("Adi");
                    this._Adi = value;
                    this.SendPropertyChanged("Adi");
                    this.OnAdiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Soyadi in the schema.
        /// </summary>
        [Column(Storage = "_Soyadi", CanBeNull = false, DbType = "NVARCHAR(4000) NOT NULL")]
        public string Soyadi
        {
            get
            {
                return this._Soyadi;
            }
            set
            {
                if (this._Soyadi != value)
                {
                    this.OnSoyadiChanging(value);
                    this.SendPropertyChanging("Soyadi");
                    this._Soyadi = value;
                    this.SendPropertyChanged("Soyadi");
                    this.OnSoyadiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tc in the schema.
        /// </summary>
        [Column(Storage = "_Tc", CanBeNull = false, DbType = "NVARCHAR(4000) NOT NULL")]
        public string Tc
        {
            get
            {
                return this._Tc;
            }
            set
            {
                if (this._Tc != value)
                {
                    this.OnTcChanging(value);
                    this.SendPropertyChanging("Tc");
                    this._Tc = value;
                    this.SendPropertyChanged("Tc");
                    this.OnTcChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Telefon in the schema.
        /// </summary>
        [Column(Storage = "_Telefon", DbType = "NVARCHAR(4000)")]
        public string Telefon
        {
            get
            {
                return this._Telefon;
            }
            set
            {
                if (this._Telefon != value)
                {
                    this.OnTelefonChanging(value);
                    this.SendPropertyChanging("Telefon");
                    this._Telefon = value;
                    this.SendPropertyChanged("Telefon");
                    this.OnTelefonChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Adres in the schema.
        /// </summary>
        [Column(Storage = "_Adres", CanBeNull = false, DbType = "NVARCHAR(4000) NOT NULL")]
        public string Adres
        {
            get
            {
                return this._Adres;
            }
            set
            {
                if (this._Adres != value)
                {
                    this.OnAdresChanging(value);
                    this.SendPropertyChanging("Adres");
                    this._Adres = value;
                    this.SendPropertyChanged("Adres");
                    this.OnAdresChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Yas in the schema.
        /// </summary>
        [Column(Storage = "_Yas", DbType = "INT")]
        public System.Nullable<int> Yas
        {
            get
            {
                return this._Yas;
            }
            set
            {
                if (this._Yas != value)
                {
                    this.OnYasChanging(value);
                    this.SendPropertyChanging("Yas");
                    this._Yas = value;
                    this.SendPropertyChanged("Yas");
                    this.OnYasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Aciklama in the schema.
        /// </summary>
        [Column(Storage = "_Aciklama", DbType = "NVARCHAR(4000)")]
        public string Aciklama
        {
            get
            {
                return this._Aciklama;
            }
            set
            {
                if (this._Aciklama != value)
                {
                    this.OnAciklamaChanging(value);
                    this.SendPropertyChanging("Aciklama");
                    this._Aciklama = value;
                    this.SendPropertyChanged("Aciklama");
                    this.OnAciklamaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Eposta in the schema.
        /// </summary>
        [Column(Storage = "_Eposta", DbType = "NVARCHAR(4000)")]
        public string Eposta
        {
            get
            {
                return this._Eposta;
            }
            set
            {
                if (this._Eposta != value)
                {
                    this.OnEpostaChanging(value);
                    this.SendPropertyChanging("Eposta");
                    this._Eposta = value;
                    this.SendPropertyChanged("Eposta");
                    this.OnEpostaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Resim in the schema.
        /// </summary>
        [Column(Storage = "_Resim", DbType = "IMAGE", UpdateCheck = UpdateCheck.Never)]
        public byte[] Resim
        {
            get
            {
                return this._Resim;
            }
            set
            {
                if (this._Resim != value)
                {
                    this.OnResimChanging(value);
                    this.SendPropertyChanging("Resim");
                    this._Resim = value;
                    this.SendPropertyChanged("Resim");
                    this.OnResimChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MusteriIadeler in the schema.
        /// </summary>
        [Association(Name="Musteriler_MusteriIadeler", Storage="_MusteriIadeler", ThisKey="MusteriID", OtherKey="MusteriID", DeleteRule="NO ACTION")]
        public EntitySet<MusteriIadeler> MusteriIadeler
        {
            get
            {
                return this._MusteriIadeler;
            }
            set
            {
                this._MusteriIadeler.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Satislar in the schema.
        /// </summary>
        [Association(Name="Musteriler_Satislar", Storage="_Satislar", ThisKey="MusteriID", OtherKey="MusteriID", DeleteRule="NO ACTION")]
        public EntitySet<Satislar> Satislar
        {
            get
            {
                return this._Satislar;
            }
            set
            {
                this._Satislar.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_MusteriIadeler(MusteriIadeler entity)
        {
            this.SendPropertyChanging();
            entity.Musteriler = this;
        }
    
        private void detach_MusteriIadeler(MusteriIadeler entity)
        {
            this.SendPropertyChanging();
            entity.Musteriler = null;
        }

        private void attach_Satislar(Satislar entity)
        {
            this.SendPropertyChanging();
            entity.Musteriler = this;
        }
    
        private void detach_Satislar(Satislar entity)
        {
            this.SendPropertyChanging();
            entity.Musteriler = null;
        }
    }

    /// <summary>
    /// There are no comments for Magaza.Satislar in the schema.
    /// </summary>
    [Table(Name = @"Satislar")]
    public partial class Satislar : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _SatisID;

        private System.Nullable<int> _MusteriID;

        private int _UrunlerUrunID;

        private System.Nullable<float> _Adet;

        private System.Nullable<System.DateTime> _TahsilatTarih;

        private System.Nullable<bool> _PesinMi;
        #pragma warning restore 0649

        private EntitySet<MusteriIadeler> _MusteriIadeler;

        private EntityRef<Musteriler> _Musteriler;

        private EntityRef<Urunler> _Urunler;

        private EntitySet<Tahsilatlar> _Tahsilatlar;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSatisIDChanging(int value);
        partial void OnSatisIDChanged();
        partial void OnMusteriIDChanging(System.Nullable<int> value);
        partial void OnMusteriIDChanged();
        partial void OnUrunlerUrunIDChanging(int value);
        partial void OnUrunlerUrunIDChanged();
        partial void OnAdetChanging(System.Nullable<float> value);
        partial void OnAdetChanged();
        partial void OnTahsilatTarihChanging(System.Nullable<System.DateTime> value);
        partial void OnTahsilatTarihChanged();
        partial void OnPesinMiChanging(System.Nullable<bool> value);
        partial void OnPesinMiChanged();
        #endregion

        public Satislar()
        {
            this._MusteriIadeler = new EntitySet<MusteriIadeler>(new Action<MusteriIadeler>(this.attach_MusteriIadeler), new Action<MusteriIadeler>(this.detach_MusteriIadeler));
            this._Musteriler  = default(EntityRef<Musteriler>);
            this._Urunler  = default(EntityRef<Urunler>);
            this._Tahsilatlar = new EntitySet<Tahsilatlar>(new Action<Tahsilatlar>(this.attach_Tahsilatlar), new Action<Tahsilatlar>(this.detach_Tahsilatlar));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for SatisID in the schema.
        /// </summary>
        [Column(Storage = "_SatisID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int SatisID
        {
            get
            {
                return this._SatisID;
            }
            set
            {
                if (this._SatisID != value)
                {
                    this.OnSatisIDChanging(value);
                    this.SendPropertyChanging("SatisID");
                    this._SatisID = value;
                    this.SendPropertyChanged("SatisID");
                    this.OnSatisIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MusteriID in the schema.
        /// </summary>
        [Column(Storage = "_MusteriID", DbType = "INT")]
        public System.Nullable<int> MusteriID
        {
            get
            {
                return this._MusteriID;
            }
            set
            {
                if (this._MusteriID != value)
                {
                    if (this._Musteriler.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMusteriIDChanging(value);
                    this.SendPropertyChanging("MusteriID");
                    this._MusteriID = value;
                    this.SendPropertyChanged("MusteriID");
                    this.OnMusteriIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UrunlerUrunID in the schema.
        /// </summary>
        [Column(Storage = "_UrunlerUrunID", CanBeNull = false, DbType = "INT NOT NULL")]
        public int UrunlerUrunID
        {
            get
            {
                return this._UrunlerUrunID;
            }
            set
            {
                if (this._UrunlerUrunID != value)
                {
                    if (this._Urunler.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnUrunlerUrunIDChanging(value);
                    this.SendPropertyChanging("UrunlerUrunID");
                    this._UrunlerUrunID = value;
                    this.SendPropertyChanged("UrunlerUrunID");
                    this.OnUrunlerUrunIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Adet in the schema.
        /// </summary>
        [Column(Storage = "_Adet", DbType = "REAL")]
        public System.Nullable<float> Adet
        {
            get
            {
                return this._Adet;
            }
            set
            {
                if (this._Adet != value)
                {
                    this.OnAdetChanging(value);
                    this.SendPropertyChanging("Adet");
                    this._Adet = value;
                    this.SendPropertyChanged("Adet");
                    this.OnAdetChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TahsilatTarih in the schema.
        /// </summary>
        [Column(Storage = "_TahsilatTarih", DbType = "DATETIME")]
        public System.Nullable<System.DateTime> TahsilatTarih
        {
            get
            {
                return this._TahsilatTarih;
            }
            set
            {
                if (this._TahsilatTarih != value)
                {
                    this.OnTahsilatTarihChanging(value);
                    this.SendPropertyChanging("TahsilatTarih");
                    this._TahsilatTarih = value;
                    this.SendPropertyChanged("TahsilatTarih");
                    this.OnTahsilatTarihChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PesinMi in the schema.
        /// </summary>
        [Column(Storage = "_PesinMi", DbType = "BIT")]
        public System.Nullable<bool> PesinMi
        {
            get
            {
                return this._PesinMi;
            }
            set
            {
                if (this._PesinMi != value)
                {
                    this.OnPesinMiChanging(value);
                    this.SendPropertyChanging("PesinMi");
                    this._PesinMi = value;
                    this.SendPropertyChanged("PesinMi");
                    this.OnPesinMiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MusteriIadeler in the schema.
        /// </summary>
        [Association(Name="Satislar_MusteriIadeler", Storage="_MusteriIadeler", ThisKey="SatisID", OtherKey="SatisID", DeleteRule="CASCADE")]
        public EntitySet<MusteriIadeler> MusteriIadeler
        {
            get
            {
                return this._MusteriIadeler;
            }
            set
            {
                this._MusteriIadeler.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Musteriler in the schema.
        /// </summary>
        [Association(Name="Musteriler_Satislar", Storage="_Musteriler", ThisKey="MusteriID", OtherKey="MusteriID", IsForeignKey=true)]
        public Musteriler Musteriler
        {
            get
            {
                return this._Musteriler.Entity;
            }
            set
            {
                Musteriler previousValue = this._Musteriler.Entity;
                if ((previousValue != value) || (this._Musteriler.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Musteriler");
                    if (previousValue != null)
                    {
                        this._Musteriler.Entity = null;
                        previousValue.Satislar.Remove(this);
                    }
                    this._Musteriler.Entity = value;
                    if (value != null)
                    {
                        this._MusteriID = value.MusteriID;
                        value.Satislar.Add(this);
                    }
                    else
                    {
                        this._MusteriID = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("Musteriler");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Urunler in the schema.
        /// </summary>
        [Association(Name="Urunler_Satislar", Storage="_Urunler", ThisKey="UrunlerUrunID", OtherKey="UrunID", IsForeignKey=true, DeleteOnNull=true)]
        public Urunler Urunler
        {
            get
            {
                return this._Urunler.Entity;
            }
            set
            {
                Urunler previousValue = this._Urunler.Entity;
                if ((previousValue != value) || (this._Urunler.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Urunler");
                    if (previousValue != null)
                    {
                        this._Urunler.Entity = null;
                        previousValue.Satislar.Remove(this);
                    }
                    this._Urunler.Entity = value;
                    if (value != null)
                    {
                        this._UrunlerUrunID = value.UrunID;
                        value.Satislar.Add(this);
                    }
                    else
                    {
                        this._UrunlerUrunID = default(int);
                    }
                    this.SendPropertyChanged("Urunler");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tahsilatlar in the schema.
        /// </summary>
        [Association(Name="Satislar_Tahsilatlar", Storage="_Tahsilatlar", ThisKey="SatisID", OtherKey="SatisID", DeleteRule="CASCADE")]
        public EntitySet<Tahsilatlar> Tahsilatlar
        {
            get
            {
                return this._Tahsilatlar;
            }
            set
            {
                this._Tahsilatlar.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_MusteriIadeler(MusteriIadeler entity)
        {
            this.SendPropertyChanging();
            entity.Satislar = this;
        }
    
        private void detach_MusteriIadeler(MusteriIadeler entity)
        {
            this.SendPropertyChanging();
            entity.Satislar = null;
        }

        private void attach_Tahsilatlar(Tahsilatlar entity)
        {
            this.SendPropertyChanging();
            entity.Satislar = this;
        }
    
        private void detach_Tahsilatlar(Tahsilatlar entity)
        {
            this.SendPropertyChanging();
            entity.Satislar = null;
        }
    }

    /// <summary>
    /// There are no comments for Magaza.Tahsilatlar in the schema.
    /// </summary>
    [Table(Name = @"Tahsilatlar")]
    public partial class Tahsilatlar : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _TahsilatID;

        private float _ToplamTutar;

        private float _PesinOdenen;

        private int _TaksitSayisi;

        private float _FaizOrani;

        private System.Nullable<bool> _TahsilatBittiMi;

        private string _Aciklama;

        private int _SatisID;
        #pragma warning restore 0649

        private EntityRef<Satislar> _Satislar;

        private EntitySet<Taksitler> _Taksitler;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnTahsilatIDChanging(int value);
        partial void OnTahsilatIDChanged();
        partial void OnToplamTutarChanging(float value);
        partial void OnToplamTutarChanged();
        partial void OnPesinOdenenChanging(float value);
        partial void OnPesinOdenenChanged();
        partial void OnTaksitSayisiChanging(int value);
        partial void OnTaksitSayisiChanged();
        partial void OnFaizOraniChanging(float value);
        partial void OnFaizOraniChanged();
        partial void OnTahsilatBittiMiChanging(System.Nullable<bool> value);
        partial void OnTahsilatBittiMiChanged();
        partial void OnAciklamaChanging(string value);
        partial void OnAciklamaChanged();
        partial void OnSatisIDChanging(int value);
        partial void OnSatisIDChanged();
        #endregion

        public Tahsilatlar()
        {
            this._Satislar  = default(EntityRef<Satislar>);
            this._Taksitler = new EntitySet<Taksitler>(new Action<Taksitler>(this.attach_Taksitler), new Action<Taksitler>(this.detach_Taksitler));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for TahsilatID in the schema.
        /// </summary>
        [Column(Storage = "_TahsilatID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int TahsilatID
        {
            get
            {
                return this._TahsilatID;
            }
            set
            {
                if (this._TahsilatID != value)
                {
                    this.OnTahsilatIDChanging(value);
                    this.SendPropertyChanging("TahsilatID");
                    this._TahsilatID = value;
                    this.SendPropertyChanged("TahsilatID");
                    this.OnTahsilatIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ToplamTutar in the schema.
        /// </summary>
        [Column(Storage = "_ToplamTutar", CanBeNull = false, DbType = "REAL NOT NULL")]
        public float ToplamTutar
        {
            get
            {
                return this._ToplamTutar;
            }
            set
            {
                if (this._ToplamTutar != value)
                {
                    this.OnToplamTutarChanging(value);
                    this.SendPropertyChanging("ToplamTutar");
                    this._ToplamTutar = value;
                    this.SendPropertyChanged("ToplamTutar");
                    this.OnToplamTutarChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PesinOdenen in the schema.
        /// </summary>
        [Column(Storage = "_PesinOdenen", CanBeNull = false, DbType = "REAL NOT NULL")]
        public float PesinOdenen
        {
            get
            {
                return this._PesinOdenen;
            }
            set
            {
                if (this._PesinOdenen != value)
                {
                    this.OnPesinOdenenChanging(value);
                    this.SendPropertyChanging("PesinOdenen");
                    this._PesinOdenen = value;
                    this.SendPropertyChanged("PesinOdenen");
                    this.OnPesinOdenenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TaksitSayisi in the schema.
        /// </summary>
        [Column(Storage = "_TaksitSayisi", CanBeNull = false, DbType = "INT NOT NULL")]
        public int TaksitSayisi
        {
            get
            {
                return this._TaksitSayisi;
            }
            set
            {
                if (this._TaksitSayisi != value)
                {
                    this.OnTaksitSayisiChanging(value);
                    this.SendPropertyChanging("TaksitSayisi");
                    this._TaksitSayisi = value;
                    this.SendPropertyChanged("TaksitSayisi");
                    this.OnTaksitSayisiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FaizOrani in the schema.
        /// </summary>
        [Column(Storage = "_FaizOrani", CanBeNull = false, DbType = "REAL NOT NULL")]
        public float FaizOrani
        {
            get
            {
                return this._FaizOrani;
            }
            set
            {
                if (this._FaizOrani != value)
                {
                    this.OnFaizOraniChanging(value);
                    this.SendPropertyChanging("FaizOrani");
                    this._FaizOrani = value;
                    this.SendPropertyChanged("FaizOrani");
                    this.OnFaizOraniChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TahsilatBittiMi in the schema.
        /// </summary>
        [Column(Storage = "_TahsilatBittiMi", DbType = "BIT")]
        public System.Nullable<bool> TahsilatBittiMi
        {
            get
            {
                return this._TahsilatBittiMi;
            }
            set
            {
                if (this._TahsilatBittiMi != value)
                {
                    this.OnTahsilatBittiMiChanging(value);
                    this.SendPropertyChanging("TahsilatBittiMi");
                    this._TahsilatBittiMi = value;
                    this.SendPropertyChanged("TahsilatBittiMi");
                    this.OnTahsilatBittiMiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Aciklama in the schema.
        /// </summary>
        [Column(Storage = "_Aciklama", DbType = "NVARCHAR(4000)")]
        public string Aciklama
        {
            get
            {
                return this._Aciklama;
            }
            set
            {
                if (this._Aciklama != value)
                {
                    this.OnAciklamaChanging(value);
                    this.SendPropertyChanging("Aciklama");
                    this._Aciklama = value;
                    this.SendPropertyChanged("Aciklama");
                    this.OnAciklamaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SatisID in the schema.
        /// </summary>
        [Column(Storage = "_SatisID", CanBeNull = false, DbType = "INT NOT NULL")]
        public int SatisID
        {
            get
            {
                return this._SatisID;
            }
            set
            {
                if (this._SatisID != value)
                {
                    if (this._Satislar.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSatisIDChanging(value);
                    this.SendPropertyChanging("SatisID");
                    this._SatisID = value;
                    this.SendPropertyChanged("SatisID");
                    this.OnSatisIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Satislar in the schema.
        /// </summary>
        [Association(Name="Satislar_Tahsilatlar", Storage="_Satislar", ThisKey="SatisID", OtherKey="SatisID", IsForeignKey=true, DeleteOnNull=true)]
        public Satislar Satislar
        {
            get
            {
                return this._Satislar.Entity;
            }
            set
            {
                Satislar previousValue = this._Satislar.Entity;
                if ((previousValue != value) || (this._Satislar.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Satislar");
                    if (previousValue != null)
                    {
                        this._Satislar.Entity = null;
                        previousValue.Tahsilatlar.Remove(this);
                    }
                    this._Satislar.Entity = value;
                    if (value != null)
                    {
                        this._SatisID = value.SatisID;
                        value.Tahsilatlar.Add(this);
                    }
                    else
                    {
                        this._SatisID = default(int);
                    }
                    this.SendPropertyChanged("Satislar");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Taksitler in the schema.
        /// </summary>
        [Association(Name="Tahsilatlar_Taksitler", Storage="_Taksitler", ThisKey="TahsilatID", OtherKey="TahsilatID", DeleteRule="CASCADE")]
        public EntitySet<Taksitler> Taksitler
        {
            get
            {
                return this._Taksitler;
            }
            set
            {
                this._Taksitler.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Taksitler(Taksitler entity)
        {
            this.SendPropertyChanging();
            entity.Tahsilatlar = this;
        }
    
        private void detach_Taksitler(Taksitler entity)
        {
            this.SendPropertyChanging();
            entity.Tahsilatlar = null;
        }
    }

    /// <summary>
    /// There are no comments for Magaza.Taksitler in the schema.
    /// </summary>
    [Table(Name = @"Taksitler")]
    public partial class Taksitler : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _TaksitID;

        private System.DateTime _VadeTarihi;

        private float _TaksitBedeli;

        private float _TahsilEdilenTaksitTutari;

        private System.Nullable<bool> _TaksitOdendiMi;

        private string _Aciklama;

        private int _TahsilatID;

        private System.Nullable<int> _Sira;
        #pragma warning restore 0649

        private EntityRef<Tahsilatlar> _Tahsilatlar;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnTaksitIDChanging(int value);
        partial void OnTaksitIDChanged();
        partial void OnVadeTarihiChanging(System.DateTime value);
        partial void OnVadeTarihiChanged();
        partial void OnTaksitBedeliChanging(float value);
        partial void OnTaksitBedeliChanged();
        partial void OnTahsilEdilenTaksitTutariChanging(float value);
        partial void OnTahsilEdilenTaksitTutariChanged();
        partial void OnTaksitOdendiMiChanging(System.Nullable<bool> value);
        partial void OnTaksitOdendiMiChanged();
        partial void OnAciklamaChanging(string value);
        partial void OnAciklamaChanged();
        partial void OnTahsilatIDChanging(int value);
        partial void OnTahsilatIDChanged();
        partial void OnSiraChanging(System.Nullable<int> value);
        partial void OnSiraChanged();
        #endregion

        public Taksitler()
        {
            this._Tahsilatlar  = default(EntityRef<Tahsilatlar>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for TaksitID in the schema.
        /// </summary>
        [Column(Storage = "_TaksitID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int TaksitID
        {
            get
            {
                return this._TaksitID;
            }
            set
            {
                if (this._TaksitID != value)
                {
                    this.OnTaksitIDChanging(value);
                    this.SendPropertyChanging("TaksitID");
                    this._TaksitID = value;
                    this.SendPropertyChanged("TaksitID");
                    this.OnTaksitIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VadeTarihi in the schema.
        /// </summary>
        [Column(Storage = "_VadeTarihi", CanBeNull = false, DbType = "DATETIME NOT NULL")]
        public System.DateTime VadeTarihi
        {
            get
            {
                return this._VadeTarihi;
            }
            set
            {
                if (this._VadeTarihi != value)
                {
                    this.OnVadeTarihiChanging(value);
                    this.SendPropertyChanging("VadeTarihi");
                    this._VadeTarihi = value;
                    this.SendPropertyChanged("VadeTarihi");
                    this.OnVadeTarihiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TaksitBedeli in the schema.
        /// </summary>
        [Column(Storage = "_TaksitBedeli", CanBeNull = false, DbType = "REAL NOT NULL")]
        public float TaksitBedeli
        {
            get
            {
                return this._TaksitBedeli;
            }
            set
            {
                if (this._TaksitBedeli != value)
                {
                    this.OnTaksitBedeliChanging(value);
                    this.SendPropertyChanging("TaksitBedeli");
                    this._TaksitBedeli = value;
                    this.SendPropertyChanged("TaksitBedeli");
                    this.OnTaksitBedeliChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TahsilEdilenTaksitTutari in the schema.
        /// </summary>
        [Column(Storage = "_TahsilEdilenTaksitTutari", CanBeNull = false, DbType = "REAL NOT NULL")]
        public float TahsilEdilenTaksitTutari
        {
            get
            {
                return this._TahsilEdilenTaksitTutari;
            }
            set
            {
                if (this._TahsilEdilenTaksitTutari != value)
                {
                    this.OnTahsilEdilenTaksitTutariChanging(value);
                    this.SendPropertyChanging("TahsilEdilenTaksitTutari");
                    this._TahsilEdilenTaksitTutari = value;
                    this.SendPropertyChanged("TahsilEdilenTaksitTutari");
                    this.OnTahsilEdilenTaksitTutariChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TaksitOdendiMi in the schema.
        /// </summary>
        [Column(Storage = "_TaksitOdendiMi", DbType = "BIT")]
        public System.Nullable<bool> TaksitOdendiMi
        {
            get
            {
                return this._TaksitOdendiMi;
            }
            set
            {
                if (this._TaksitOdendiMi != value)
                {
                    this.OnTaksitOdendiMiChanging(value);
                    this.SendPropertyChanging("TaksitOdendiMi");
                    this._TaksitOdendiMi = value;
                    this.SendPropertyChanged("TaksitOdendiMi");
                    this.OnTaksitOdendiMiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Aciklama in the schema.
        /// </summary>
        [Column(Storage = "_Aciklama", DbType = "NVARCHAR(4000)")]
        public string Aciklama
        {
            get
            {
                return this._Aciklama;
            }
            set
            {
                if (this._Aciklama != value)
                {
                    this.OnAciklamaChanging(value);
                    this.SendPropertyChanging("Aciklama");
                    this._Aciklama = value;
                    this.SendPropertyChanged("Aciklama");
                    this.OnAciklamaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TahsilatID in the schema.
        /// </summary>
        [Column(Storage = "_TahsilatID", CanBeNull = false, DbType = "INT NOT NULL")]
        public int TahsilatID
        {
            get
            {
                return this._TahsilatID;
            }
            set
            {
                if (this._TahsilatID != value)
                {
                    if (this._Tahsilatlar.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnTahsilatIDChanging(value);
                    this.SendPropertyChanging("TahsilatID");
                    this._TahsilatID = value;
                    this.SendPropertyChanged("TahsilatID");
                    this.OnTahsilatIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Sira in the schema.
        /// </summary>
        [Column(Storage = "_Sira", DbType = "INT")]
        public System.Nullable<int> Sira
        {
            get
            {
                return this._Sira;
            }
            set
            {
                if (this._Sira != value)
                {
                    this.OnSiraChanging(value);
                    this.SendPropertyChanging("Sira");
                    this._Sira = value;
                    this.SendPropertyChanged("Sira");
                    this.OnSiraChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tahsilatlar in the schema.
        /// </summary>
        [Association(Name="Tahsilatlar_Taksitler", Storage="_Tahsilatlar", ThisKey="TahsilatID", OtherKey="TahsilatID", IsForeignKey=true, DeleteOnNull=true)]
        public Tahsilatlar Tahsilatlar
        {
            get
            {
                return this._Tahsilatlar.Entity;
            }
            set
            {
                Tahsilatlar previousValue = this._Tahsilatlar.Entity;
                if ((previousValue != value) || (this._Tahsilatlar.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Tahsilatlar");
                    if (previousValue != null)
                    {
                        this._Tahsilatlar.Entity = null;
                        previousValue.Taksitler.Remove(this);
                    }
                    this._Tahsilatlar.Entity = value;
                    if (value != null)
                    {
                        this._TahsilatID = value.TahsilatID;
                        value.Taksitler.Add(this);
                    }
                    else
                    {
                        this._TahsilatID = default(int);
                    }
                    this.SendPropertyChanged("Tahsilatlar");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Magaza.Toptancilar in the schema.
    /// </summary>
    [Table(Name = @"Toptancilar")]
    public partial class Toptancilar : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _ToptanciID;

        private string _Adi;

        private string _Telefon;

        private string _Adres;

        private string _VergiNo;

        private System.Nullable<System.DateTime> _MalAlimTarihi;

        private float _ToptanciyaOlanBorc;

        private string _Aciklama;
        #pragma warning restore 0649

        private EntitySet<UrunGruplari> _UrunGruplari;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnToptanciIDChanging(int value);
        partial void OnToptanciIDChanged();
        partial void OnAdiChanging(string value);
        partial void OnAdiChanged();
        partial void OnTelefonChanging(string value);
        partial void OnTelefonChanged();
        partial void OnAdresChanging(string value);
        partial void OnAdresChanged();
        partial void OnVergiNoChanging(string value);
        partial void OnVergiNoChanged();
        partial void OnMalAlimTarihiChanging(System.Nullable<System.DateTime> value);
        partial void OnMalAlimTarihiChanged();
        partial void OnToptanciyaOlanBorcChanging(float value);
        partial void OnToptanciyaOlanBorcChanged();
        partial void OnAciklamaChanging(string value);
        partial void OnAciklamaChanged();
        #endregion

        public Toptancilar()
        {
            this._UrunGruplari = new EntitySet<UrunGruplari>(new Action<UrunGruplari>(this.attach_UrunGruplari), new Action<UrunGruplari>(this.detach_UrunGruplari));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ToptanciID in the schema.
        /// </summary>
        [Column(Storage = "_ToptanciID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int ToptanciID
        {
            get
            {
                return this._ToptanciID;
            }
            set
            {
                if (this._ToptanciID != value)
                {
                    this.OnToptanciIDChanging(value);
                    this.SendPropertyChanging("ToptanciID");
                    this._ToptanciID = value;
                    this.SendPropertyChanged("ToptanciID");
                    this.OnToptanciIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Adi in the schema.
        /// </summary>
        [Column(Storage = "_Adi", CanBeNull = false, DbType = "NVARCHAR(4000) NOT NULL")]
        public string Adi
        {
            get
            {
                return this._Adi;
            }
            set
            {
                if (this._Adi != value)
                {
                    this.OnAdiChanging(value);
                    this.SendPropertyChanging("Adi");
                    this._Adi = value;
                    this.SendPropertyChanged("Adi");
                    this.OnAdiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Telefon in the schema.
        /// </summary>
        [Column(Storage = "_Telefon", DbType = "NVARCHAR(4000)")]
        public string Telefon
        {
            get
            {
                return this._Telefon;
            }
            set
            {
                if (this._Telefon != value)
                {
                    this.OnTelefonChanging(value);
                    this.SendPropertyChanging("Telefon");
                    this._Telefon = value;
                    this.SendPropertyChanged("Telefon");
                    this.OnTelefonChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Adres in the schema.
        /// </summary>
        [Column(Storage = "_Adres", DbType = "NVARCHAR(4000)")]
        public string Adres
        {
            get
            {
                return this._Adres;
            }
            set
            {
                if (this._Adres != value)
                {
                    this.OnAdresChanging(value);
                    this.SendPropertyChanging("Adres");
                    this._Adres = value;
                    this.SendPropertyChanged("Adres");
                    this.OnAdresChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VergiNo in the schema.
        /// </summary>
        [Column(Storage = "_VergiNo", DbType = "NVARCHAR(4000)")]
        public string VergiNo
        {
            get
            {
                return this._VergiNo;
            }
            set
            {
                if (this._VergiNo != value)
                {
                    this.OnVergiNoChanging(value);
                    this.SendPropertyChanging("VergiNo");
                    this._VergiNo = value;
                    this.SendPropertyChanged("VergiNo");
                    this.OnVergiNoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MalAlimTarihi in the schema.
        /// </summary>
        [Column(Storage = "_MalAlimTarihi", DbType = "DATETIME")]
        public System.Nullable<System.DateTime> MalAlimTarihi
        {
            get
            {
                return this._MalAlimTarihi;
            }
            set
            {
                if (this._MalAlimTarihi != value)
                {
                    this.OnMalAlimTarihiChanging(value);
                    this.SendPropertyChanging("MalAlimTarihi");
                    this._MalAlimTarihi = value;
                    this.SendPropertyChanged("MalAlimTarihi");
                    this.OnMalAlimTarihiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ToptanciyaOlanBorc in the schema.
        /// </summary>
        [Column(Storage = "_ToptanciyaOlanBorc", CanBeNull = false, DbType = "REAL NOT NULL")]
        public float ToptanciyaOlanBorc
        {
            get
            {
                return this._ToptanciyaOlanBorc;
            }
            set
            {
                if (this._ToptanciyaOlanBorc != value)
                {
                    this.OnToptanciyaOlanBorcChanging(value);
                    this.SendPropertyChanging("ToptanciyaOlanBorc");
                    this._ToptanciyaOlanBorc = value;
                    this.SendPropertyChanged("ToptanciyaOlanBorc");
                    this.OnToptanciyaOlanBorcChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Aciklama in the schema.
        /// </summary>
        [Column(Storage = "_Aciklama", DbType = "NVARCHAR(4000)")]
        public string Aciklama
        {
            get
            {
                return this._Aciklama;
            }
            set
            {
                if (this._Aciklama != value)
                {
                    this.OnAciklamaChanging(value);
                    this.SendPropertyChanging("Aciklama");
                    this._Aciklama = value;
                    this.SendPropertyChanged("Aciklama");
                    this.OnAciklamaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UrunGruplari in the schema.
        /// </summary>
        [Association(Name="Toptancilar_UrunGruplari", Storage="_UrunGruplari", ThisKey="ToptanciID", OtherKey="ToptanciID", DeleteRule="NO ACTION")]
        public EntitySet<UrunGruplari> UrunGruplari
        {
            get
            {
                return this._UrunGruplari;
            }
            set
            {
                this._UrunGruplari.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_UrunGruplari(UrunGruplari entity)
        {
            this.SendPropertyChanging();
            entity.Toptancilar = this;
        }
    
        private void detach_UrunGruplari(UrunGruplari entity)
        {
            this.SendPropertyChanging();
            entity.Toptancilar = null;
        }
    }

    /// <summary>
    /// There are no comments for Magaza.UrunGruplari in the schema.
    /// </summary>
    [Table(Name = @"UrunGruplari")]
    public partial class UrunGruplari : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _UrunGrupID;

        private int _ToptanciID;

        private int _KategoriId;
        #pragma warning restore 0649

        private EntityRef<Toptancilar> _Toptancilar;

        private EntityRef<UrunKategorileri> _UrunKategorileri;

        private EntitySet<Urunler> _Urunler;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnUrunGrupIDChanging(int value);
        partial void OnUrunGrupIDChanged();
        partial void OnToptanciIDChanging(int value);
        partial void OnToptanciIDChanged();
        partial void OnKategoriIdChanging(int value);
        partial void OnKategoriIdChanged();
        #endregion

        public UrunGruplari()
        {
            this._Toptancilar  = default(EntityRef<Toptancilar>);
            this._UrunKategorileri  = default(EntityRef<UrunKategorileri>);
            this._Urunler = new EntitySet<Urunler>(new Action<Urunler>(this.attach_Urunler), new Action<Urunler>(this.detach_Urunler));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for UrunGrupID in the schema.
        /// </summary>
        [Column(Storage = "_UrunGrupID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int UrunGrupID
        {
            get
            {
                return this._UrunGrupID;
            }
            set
            {
                if (this._UrunGrupID != value)
                {
                    this.OnUrunGrupIDChanging(value);
                    this.SendPropertyChanging("UrunGrupID");
                    this._UrunGrupID = value;
                    this.SendPropertyChanged("UrunGrupID");
                    this.OnUrunGrupIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ToptanciID in the schema.
        /// </summary>
        [Column(Storage = "_ToptanciID", CanBeNull = false, DbType = "INT NOT NULL")]
        public int ToptanciID
        {
            get
            {
                return this._ToptanciID;
            }
            set
            {
                if (this._ToptanciID != value)
                {
                    if (this._Toptancilar.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnToptanciIDChanging(value);
                    this.SendPropertyChanging("ToptanciID");
                    this._ToptanciID = value;
                    this.SendPropertyChanged("ToptanciID");
                    this.OnToptanciIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KategoriId in the schema.
        /// </summary>
        [Column(Storage = "_KategoriId", CanBeNull = false, DbType = "INT NOT NULL")]
        public int KategoriId
        {
            get
            {
                return this._KategoriId;
            }
            set
            {
                if (this._KategoriId != value)
                {
                    if (this._UrunKategorileri.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnKategoriIdChanging(value);
                    this.SendPropertyChanging("KategoriId");
                    this._KategoriId = value;
                    this.SendPropertyChanged("KategoriId");
                    this.OnKategoriIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Toptancilar in the schema.
        /// </summary>
        [Association(Name="Toptancilar_UrunGruplari", Storage="_Toptancilar", ThisKey="ToptanciID", OtherKey="ToptanciID", IsForeignKey=true, DeleteOnNull=true)]
        public Toptancilar Toptancilar
        {
            get
            {
                return this._Toptancilar.Entity;
            }
            set
            {
                Toptancilar previousValue = this._Toptancilar.Entity;
                if ((previousValue != value) || (this._Toptancilar.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Toptancilar");
                    if (previousValue != null)
                    {
                        this._Toptancilar.Entity = null;
                        previousValue.UrunGruplari.Remove(this);
                    }
                    this._Toptancilar.Entity = value;
                    if (value != null)
                    {
                        this._ToptanciID = value.ToptanciID;
                        value.UrunGruplari.Add(this);
                    }
                    else
                    {
                        this._ToptanciID = default(int);
                    }
                    this.SendPropertyChanged("Toptancilar");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UrunKategorileri in the schema.
        /// </summary>
        [Association(Name="UrunKategorileri_UrunGruplari", Storage="_UrunKategorileri", ThisKey="KategoriId", OtherKey="KategoriId", IsForeignKey=true, DeleteOnNull=true)]
        public UrunKategorileri UrunKategorileri
        {
            get
            {
                return this._UrunKategorileri.Entity;
            }
            set
            {
                UrunKategorileri previousValue = this._UrunKategorileri.Entity;
                if ((previousValue != value) || (this._UrunKategorileri.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("UrunKategorileri");
                    if (previousValue != null)
                    {
                        this._UrunKategorileri.Entity = null;
                        previousValue.UrunGruplari.Remove(this);
                    }
                    this._UrunKategorileri.Entity = value;
                    if (value != null)
                    {
                        this._KategoriId = value.KategoriId;
                        value.UrunGruplari.Add(this);
                    }
                    else
                    {
                        this._KategoriId = default(int);
                    }
                    this.SendPropertyChanged("UrunKategorileri");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Urunler in the schema.
        /// </summary>
        [Association(Name="UrunGruplari_Urunler", Storage="_Urunler", ThisKey="UrunGrupID", OtherKey="UrunGrupID", DeleteRule="NO ACTION")]
        public EntitySet<Urunler> Urunler
        {
            get
            {
                return this._Urunler;
            }
            set
            {
                this._Urunler.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Urunler(Urunler entity)
        {
            this.SendPropertyChanging();
            entity.UrunGruplari = this;
        }
    
        private void detach_Urunler(Urunler entity)
        {
            this.SendPropertyChanging();
            entity.UrunGruplari = null;
        }
    }

    /// <summary>
    /// There are no comments for Magaza.UrunKategorileri in the schema.
    /// </summary>
    [Table(Name = @"UrunKategorileri")]
    public partial class UrunKategorileri : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _KategoriId;

        private string _KategoriAdi;
        #pragma warning restore 0649

        private EntitySet<UrunGruplari> _UrunGruplari;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnKategoriIdChanging(int value);
        partial void OnKategoriIdChanged();
        partial void OnKategoriAdiChanging(string value);
        partial void OnKategoriAdiChanged();
        #endregion

        public UrunKategorileri()
        {
            this._UrunGruplari = new EntitySet<UrunGruplari>(new Action<UrunGruplari>(this.attach_UrunGruplari), new Action<UrunGruplari>(this.detach_UrunGruplari));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for KategoriId in the schema.
        /// </summary>
        [Column(Storage = "_KategoriId", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int KategoriId
        {
            get
            {
                return this._KategoriId;
            }
            set
            {
                if (this._KategoriId != value)
                {
                    this.OnKategoriIdChanging(value);
                    this.SendPropertyChanging("KategoriId");
                    this._KategoriId = value;
                    this.SendPropertyChanged("KategoriId");
                    this.OnKategoriIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KategoriAdi in the schema.
        /// </summary>
        [Column(Storage = "_KategoriAdi", CanBeNull = false, DbType = "NVARCHAR(4000) NOT NULL")]
        public string KategoriAdi
        {
            get
            {
                return this._KategoriAdi;
            }
            set
            {
                if (this._KategoriAdi != value)
                {
                    this.OnKategoriAdiChanging(value);
                    this.SendPropertyChanging("KategoriAdi");
                    this._KategoriAdi = value;
                    this.SendPropertyChanged("KategoriAdi");
                    this.OnKategoriAdiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UrunGruplari in the schema.
        /// </summary>
        [Association(Name="UrunKategorileri_UrunGruplari", Storage="_UrunGruplari", ThisKey="KategoriId", OtherKey="KategoriId", DeleteRule="NO ACTION")]
        public EntitySet<UrunGruplari> UrunGruplari
        {
            get
            {
                return this._UrunGruplari;
            }
            set
            {
                this._UrunGruplari.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_UrunGruplari(UrunGruplari entity)
        {
            this.SendPropertyChanging();
            entity.UrunKategorileri = this;
        }
    
        private void detach_UrunGruplari(UrunGruplari entity)
        {
            this.SendPropertyChanging();
            entity.UrunKategorileri = null;
        }
    }

    /// <summary>
    /// There are no comments for Magaza.Urunler in the schema.
    /// </summary>
    [Table(Name = @"Urunler")]
    public partial class Urunler : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _UrunID;

        private string _UrunAdi;

        private float _AlisFiyat;

        private float _SatisFiyat;

        private float _Kdv;

        private float _KalanMiktar;

        private string _OlcuBirimi;

        private string _Aciklama;

        private System.Nullable<int> _UrunGrupID;

        private float _ToplamMiktar;

        private byte[] _Resim;

        private System.Nullable<bool> _Favori;
        #pragma warning restore 0649

        private EntitySet<MusteriIadeler> _MusteriIadeler;

        private EntitySet<Satislar> _Satislar;

        private EntityRef<UrunGruplari> _UrunGruplari;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnUrunIDChanging(int value);
        partial void OnUrunIDChanged();
        partial void OnUrunAdiChanging(string value);
        partial void OnUrunAdiChanged();
        partial void OnAlisFiyatChanging(float value);
        partial void OnAlisFiyatChanged();
        partial void OnSatisFiyatChanging(float value);
        partial void OnSatisFiyatChanged();
        partial void OnKdvChanging(float value);
        partial void OnKdvChanged();
        partial void OnKalanMiktarChanging(float value);
        partial void OnKalanMiktarChanged();
        partial void OnOlcuBirimiChanging(string value);
        partial void OnOlcuBirimiChanged();
        partial void OnAciklamaChanging(string value);
        partial void OnAciklamaChanged();
        partial void OnUrunGrupIDChanging(System.Nullable<int> value);
        partial void OnUrunGrupIDChanged();
        partial void OnToplamMiktarChanging(float value);
        partial void OnToplamMiktarChanged();
        partial void OnResimChanging(byte[] value);
        partial void OnResimChanged();
        partial void OnFavoriChanging(System.Nullable<bool> value);
        partial void OnFavoriChanged();
        #endregion

        public Urunler()
        {
            this._MusteriIadeler = new EntitySet<MusteriIadeler>(new Action<MusteriIadeler>(this.attach_MusteriIadeler), new Action<MusteriIadeler>(this.detach_MusteriIadeler));
            this._Satislar = new EntitySet<Satislar>(new Action<Satislar>(this.attach_Satislar), new Action<Satislar>(this.detach_Satislar));
            this._UrunGruplari  = default(EntityRef<UrunGruplari>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for UrunID in the schema.
        /// </summary>
        [Column(Storage = "_UrunID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int UrunID
        {
            get
            {
                return this._UrunID;
            }
            set
            {
                if (this._UrunID != value)
                {
                    this.OnUrunIDChanging(value);
                    this.SendPropertyChanging("UrunID");
                    this._UrunID = value;
                    this.SendPropertyChanged("UrunID");
                    this.OnUrunIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UrunAdi in the schema.
        /// </summary>
        [Column(Storage = "_UrunAdi", CanBeNull = false, DbType = "NVARCHAR(4000) NOT NULL")]
        public string UrunAdi
        {
            get
            {
                return this._UrunAdi;
            }
            set
            {
                if (this._UrunAdi != value)
                {
                    this.OnUrunAdiChanging(value);
                    this.SendPropertyChanging("UrunAdi");
                    this._UrunAdi = value;
                    this.SendPropertyChanged("UrunAdi");
                    this.OnUrunAdiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AlisFiyat in the schema.
        /// </summary>
        [Column(Storage = "_AlisFiyat", CanBeNull = false, DbType = "REAL NOT NULL")]
        public float AlisFiyat
        {
            get
            {
                return this._AlisFiyat;
            }
            set
            {
                if (this._AlisFiyat != value)
                {
                    this.OnAlisFiyatChanging(value);
                    this.SendPropertyChanging("AlisFiyat");
                    this._AlisFiyat = value;
                    this.SendPropertyChanged("AlisFiyat");
                    this.OnAlisFiyatChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SatisFiyat in the schema.
        /// </summary>
        [Column(Storage = "_SatisFiyat", CanBeNull = false, DbType = "REAL NOT NULL")]
        public float SatisFiyat
        {
            get
            {
                return this._SatisFiyat;
            }
            set
            {
                if (this._SatisFiyat != value)
                {
                    this.OnSatisFiyatChanging(value);
                    this.SendPropertyChanging("SatisFiyat");
                    this._SatisFiyat = value;
                    this.SendPropertyChanged("SatisFiyat");
                    this.OnSatisFiyatChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Kdv in the schema.
        /// </summary>
        [Column(Storage = "_Kdv", CanBeNull = false, DbType = "REAL NOT NULL")]
        public float Kdv
        {
            get
            {
                return this._Kdv;
            }
            set
            {
                if (this._Kdv != value)
                {
                    this.OnKdvChanging(value);
                    this.SendPropertyChanging("Kdv");
                    this._Kdv = value;
                    this.SendPropertyChanged("Kdv");
                    this.OnKdvChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KalanMiktar in the schema.
        /// </summary>
        [Column(Storage = "_KalanMiktar", CanBeNull = false, DbType = "REAL NOT NULL")]
        public float KalanMiktar
        {
            get
            {
                return this._KalanMiktar;
            }
            set
            {
                if (this._KalanMiktar != value)
                {
                    this.OnKalanMiktarChanging(value);
                    this.SendPropertyChanging("KalanMiktar");
                    this._KalanMiktar = value;
                    this.SendPropertyChanged("KalanMiktar");
                    this.OnKalanMiktarChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OlcuBirimi in the schema.
        /// </summary>
        [Column(Storage = "_OlcuBirimi", DbType = "NVARCHAR(4000)")]
        public string OlcuBirimi
        {
            get
            {
                return this._OlcuBirimi;
            }
            set
            {
                if (this._OlcuBirimi != value)
                {
                    this.OnOlcuBirimiChanging(value);
                    this.SendPropertyChanging("OlcuBirimi");
                    this._OlcuBirimi = value;
                    this.SendPropertyChanged("OlcuBirimi");
                    this.OnOlcuBirimiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Aciklama in the schema.
        /// </summary>
        [Column(Storage = "_Aciklama", DbType = "NVARCHAR(4000)")]
        public string Aciklama
        {
            get
            {
                return this._Aciklama;
            }
            set
            {
                if (this._Aciklama != value)
                {
                    this.OnAciklamaChanging(value);
                    this.SendPropertyChanging("Aciklama");
                    this._Aciklama = value;
                    this.SendPropertyChanged("Aciklama");
                    this.OnAciklamaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UrunGrupID in the schema.
        /// </summary>
        [Column(Storage = "_UrunGrupID", DbType = "INT")]
        public System.Nullable<int> UrunGrupID
        {
            get
            {
                return this._UrunGrupID;
            }
            set
            {
                if (this._UrunGrupID != value)
                {
                    if (this._UrunGruplari.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnUrunGrupIDChanging(value);
                    this.SendPropertyChanging("UrunGrupID");
                    this._UrunGrupID = value;
                    this.SendPropertyChanged("UrunGrupID");
                    this.OnUrunGrupIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ToplamMiktar in the schema.
        /// </summary>
        [Column(Storage = "_ToplamMiktar", CanBeNull = false, DbType = "REAL NOT NULL")]
        public float ToplamMiktar
        {
            get
            {
                return this._ToplamMiktar;
            }
            set
            {
                if (this._ToplamMiktar != value)
                {
                    this.OnToplamMiktarChanging(value);
                    this.SendPropertyChanging("ToplamMiktar");
                    this._ToplamMiktar = value;
                    this.SendPropertyChanged("ToplamMiktar");
                    this.OnToplamMiktarChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Resim in the schema.
        /// </summary>
        [Column(Storage = "_Resim", DbType = "IMAGE", UpdateCheck = UpdateCheck.Never)]
        public byte[] Resim
        {
            get
            {
                return this._Resim;
            }
            set
            {
                if (this._Resim != value)
                {
                    this.OnResimChanging(value);
                    this.SendPropertyChanging("Resim");
                    this._Resim = value;
                    this.SendPropertyChanged("Resim");
                    this.OnResimChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Favori in the schema.
        /// </summary>
        [Column(Storage = "_Favori", DbType = "BIT")]
        public System.Nullable<bool> Favori
        {
            get
            {
                return this._Favori;
            }
            set
            {
                if (this._Favori != value)
                {
                    this.OnFavoriChanging(value);
                    this.SendPropertyChanging("Favori");
                    this._Favori = value;
                    this.SendPropertyChanged("Favori");
                    this.OnFavoriChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MusteriIadeler in the schema.
        /// </summary>
        [Association(Name="Urunler_MusteriIadeler", Storage="_MusteriIadeler", ThisKey="UrunID", OtherKey="UrunID", DeleteRule="NO ACTION")]
        public EntitySet<MusteriIadeler> MusteriIadeler
        {
            get
            {
                return this._MusteriIadeler;
            }
            set
            {
                this._MusteriIadeler.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Satislar in the schema.
        /// </summary>
        [Association(Name="Urunler_Satislar", Storage="_Satislar", ThisKey="UrunID", OtherKey="UrunlerUrunID", DeleteRule="NO ACTION")]
        public EntitySet<Satislar> Satislar
        {
            get
            {
                return this._Satislar;
            }
            set
            {
                this._Satislar.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for UrunGruplari in the schema.
        /// </summary>
        [Association(Name="UrunGruplari_Urunler", Storage="_UrunGruplari", ThisKey="UrunGrupID", OtherKey="UrunGrupID", IsForeignKey=true)]
        public UrunGruplari UrunGruplari
        {
            get
            {
                return this._UrunGruplari.Entity;
            }
            set
            {
                UrunGruplari previousValue = this._UrunGruplari.Entity;
                if ((previousValue != value) || (this._UrunGruplari.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("UrunGruplari");
                    if (previousValue != null)
                    {
                        this._UrunGruplari.Entity = null;
                        previousValue.Urunler.Remove(this);
                    }
                    this._UrunGruplari.Entity = value;
                    if (value != null)
                    {
                        this._UrunGrupID = value.UrunGrupID;
                        value.Urunler.Add(this);
                    }
                    else
                    {
                        this._UrunGrupID = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("UrunGruplari");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_MusteriIadeler(MusteriIadeler entity)
        {
            this.SendPropertyChanging();
            entity.Urunler = this;
        }
    
        private void detach_MusteriIadeler(MusteriIadeler entity)
        {
            this.SendPropertyChanging();
            entity.Urunler = null;
        }

        private void attach_Satislar(Satislar entity)
        {
            this.SendPropertyChanging();
            entity.Urunler = this;
        }
    
        private void detach_Satislar(Satislar entity)
        {
            this.SendPropertyChanging();
            entity.Urunler = null;
        }
    }

    /// <summary>
    /// There are no comments for Magaza.Ayarlar in the schema.
    /// </summary>
    [Table(Name = @"Ayarlar")]
    public partial class Ayarlar : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _AyarID;

        private System.Nullable<bool> _SatisYapilabilirMi;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnAyarIDChanging(int value);
        partial void OnAyarIDChanged();
        partial void OnSatisYapilabilirMiChanging(System.Nullable<bool> value);
        partial void OnSatisYapilabilirMiChanged();
        #endregion

        public Ayarlar()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for AyarID in the schema.
        /// </summary>
        [Column(Storage = "_AyarID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int AyarID
        {
            get
            {
                return this._AyarID;
            }
            set
            {
                if (this._AyarID != value)
                {
                    this.OnAyarIDChanging(value);
                    this.SendPropertyChanging("AyarID");
                    this._AyarID = value;
                    this.SendPropertyChanged("AyarID");
                    this.OnAyarIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SatisYapilabilirMi in the schema.
        /// </summary>
        [Column(Storage = "_SatisYapilabilirMi", DbType = "BIT")]
        public System.Nullable<bool> SatisYapilabilirMi
        {
            get
            {
                return this._SatisYapilabilirMi;
            }
            set
            {
                if (this._SatisYapilabilirMi != value)
                {
                    this.OnSatisYapilabilirMiChanging(value);
                    this.SendPropertyChanging("SatisYapilabilirMi");
                    this._SatisYapilabilirMi = value;
                    this.SendPropertyChanged("SatisYapilabilirMi");
                    this.OnSatisYapilabilirMiChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
